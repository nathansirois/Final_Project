////////////////////
//Global variables
////////////////////
var currentScene = 0;

var score = 0;

var i = 0;

var blobH = 20;

var blobW = 20;

var block1x = 300;

var block1y = 100;

var blobSpeed = 1;

var bitmojiX = 30;

var bitmojiY = 50;
////////////////////
//Constructer for the blob as well as
//the methods for its movement
////////////////////
var blob = function (x, y, h, w) {

blob.prototype.up = function() {
    block1y -= blobSpeed;
}; //up method

blob.prototype.down = function() {
    block1y += blobSpeed;
}; //down method

blob.prototype.right = function() {
    block1x += blobSpeed;
}; //right method

blob.prototype.left = function() {
    block1x -= blobSpeed;
}; //left method
//the statements here assign the methods to                                              //the correct arrow key by its key code identifier
    if (keyIsPressed && keyCode === 37)
    {
        blob.prototype.left(); 
    }
    else if (keyIsPressed && keyCode === 38)
    {
        blob.prototype.up();
    }
    else if (keyIsPressed && keyCode === 39)
    {
        blob.prototype.right();
    }
    else if (keyIsPressed && keyCode === 40)
    {
        blob.prototype.down();
    }
    background(0, 255, 47);
    fill(92, 196, 97);
    rect(block1x,block1y,blobW,blobH); //actual blob that you control
};
////////////////////
//both bitmoji draw functions
////////////////////
var drawHead1 = function(x, y, bitmojiSize) //Create head
    {
noStroke();
fill(255, 224, 189); //fill for skin tone
ellipse(x+(bitmojiSize/100),y+(bitmojiSize/100),bitmojiSize/100*83,bitmojiSize/100*100); //head
fill(79, 199, 66); //fill for background
arc(x-(bitmojiSize/100*42), y+(bitmojiSize/100*36), (bitmojiSize/100*28),
(bitmojiSize/100*55), 0, 361); //Left chisel
arc(x+(bitmojiSize/100*42), y+(bitmojiSize/100*36), (bitmojiSize/100*28), (bitmojiSize/100*55), 0, 361); //Right chisel
fill(59, 48, 36); //Brown Hair
quad(x-(bitmojiSize/100*42), y-(bitmojiSize/100*2), x-(bitmojiSize/100*37), y-(bitmojiSize/100*32), x-(bitmojiSize/100*10), y-(bitmojiSize/100*50), x-(bitmojiSize/100*35), y-(bitmojiSize/100*5)); //Left Hair
quad(x+(bitmojiSize/100*43), y-(bitmojiSize/100*1), x+(bitmojiSize/100*39), y-(bitmojiSize/100*27), x+(bitmojiSize/100*19), y-(bitmojiSize/100*44), x+(bitmojiSize/100*38), y-(bitmojiSize/100*3)); //Right Hair
ellipse(x+(bitmojiSize/100*2),y-(bitmojiSize/100*34),(bitmojiSize/100*72),(bitmojiSize/100*37)); //Top Hair
fill(112, 117, 115); //hat color
stroke(12, 12, 13); //outline stroke
arc(x+(bitmojiSize/100*1), y-(bitmojiSize/100*32), (bitmojiSize/100*81), (bitmojiSize/100*32), (bitmojiSize/100*-61), (bitmojiSize/100*220)); //hat brim
ellipse(x+(bitmojiSize/100*1),y-(bitmojiSize/100*48),(bitmojiSize/100*77),(bitmojiSize/100*45)); //top of hat
fill(255, 255, 255); //fill for eyes
ellipse(x+(bitmojiSize/100*15),y+(bitmojiSize/100),(bitmojiSize/100*9),(bitmojiSize/100*13)); //right eye background
ellipse(x-(bitmojiSize/100*10),y+(bitmojiSize/100),(bitmojiSize/100*9),(bitmojiSize/100*13)); //left eye background
fill(59, 48, 36); //eye pupil color
ellipse(x+(bitmojiSize/100*15),y+(bitmojiSize/100),(bitmojiSize/100*3),(bitmojiSize/100*5));
ellipse(x-(bitmojiSize/100*10),y+(bitmojiSize/100),(bitmojiSize/100*3),(bitmojiSize/100*5));
fill(255, 224, 189); //fill for skin tone
bezier(x+(bitmojiSize/100),y+(bitmojiSize/100),x+(bitmojiSize/100*21),y+(bitmojiSize/100*22),x-(bitmojiSize/100*8),y+(bitmojiSize/100*20),x-(bitmojiSize/100*4),y+(bitmojiSize/100*15)); //nose
fill(255, 255, 255); //fill for teeth
arc(x+(bitmojiSize/100*3),y+(bitmojiSize/100*26),(bitmojiSize/100*30),(bitmojiSize/100*17),-18, 172); //mouth arc
};

var drawShirt1 = function(x, y, bitmojiSize) //Create shirt
    {
noStroke();
fill(43, 125, 43); //drak green shirt
quad(x+(bitmojiSize/100*34), y+(bitmojiSize/100*65), x-(bitmojiSize/100*62), y+(bitmojiSize/100*25), x-(bitmojiSize/100*61), y+(bitmojiSize/100*88), x-(bitmojiSize/100*2), y+(bitmojiSize/100*88)); //left side of shirt
quad(x+(bitmojiSize/100*65), y+(bitmojiSize/100*88), x-(bitmojiSize/100*50), y+(bitmojiSize/100*88), x-(bitmojiSize/100*47), y+(bitmojiSize/100*62), x+(bitmojiSize/100*66), y+(bitmojiSize/100*30)); //right side of shirt
fill(255, 255, 255); //Text color
textSize((bitmojiSize/101*33)); //Initials
text("NS", x-(bitmojiSize/100*21), y+(bitmojiSize/155*80)); //initial size
};

var bitmoji1 = function(x, y, bitmojiSize) //Draws entire bitmoji
    {
  drawHead1(x,y,bitmojiSize);
  drawShirt1(x,y,bitmojiSize);
};

var drawBitmoji1 = function (x, y, h)
    {
    bitmoji1(bitmojiX, bitmojiY, 40);
};

var drawBitmojiHead2 = function (bitmojiX, bitmojiY, bitmojiHeight)
    {
 noStroke();
fill(255, 205, 148);
ellipse(bitmojiX, bitmojiY, bitmojiHeight/150*83, bitmojiHeight/150*100); //head
       
fill(92, 196, 97);
quad(bitmojiX-(bitmojiHeight/150*44), bitmojiY-(bitmojiHeight/150*1), bitmojiX-(bitmojiHeight/150*17), bitmojiY+(bitmojiHeight/150*49), bitmojiX-(bitmojiHeight/150*17), bitmojiY     +(bitmojiHeight/150*65), bitmojiX-(bitmojiHeight/150*40), bitmojiY+(bitmojiHeight/150*17));//left cheek
       
fill(92, 196, 97);
quad(bitmojiX+(bitmojiHeight/150*52), bitmojiY+(bitmojiHeight/150*6), bitmojiX+(bitmojiHeight/150*25), bitmojiY+(bitmojiHeight/150*49), bitmojiX+(bitmojiHeight/150*12), bitmojiY+(bitmojiHeight/150*56), bitmojiX+(bitmojiHeight/150*42), bitmojiY+(bitmojiHeight/150*6));//right cheek
   
    fill(97, 52, 52);//hair color
    quad(bitmojiX-(bitmojiHeight/150*43), bitmojiY-(bitmojiHeight/150*5), bitmojiX-(bitmojiHeight/150*37), bitmojiY-(bitmojiHeight/150*32), bitmojiX-(bitmojiHeight/150*13), bitmojiY-(bitmojiHeight/150*50), bitmojiX-(bitmojiHeight/150*30), bitmojiY-(bitmojiHeight/150*4));//left hair
   
    quad(bitmojiX+(bitmojiHeight/150*49), bitmojiY-(bitmojiHeight/150*3), bitmojiX+(bitmojiHeight/150*34), bitmojiY-(bitmojiHeight/150*32), bitmojiX+(bitmojiHeight/150*13), bitmojiY-(bitmojiHeight/150*50), bitmojiX+(bitmojiHeight/150*34), bitmojiY-(bitmojiHeight/150*3));//right hair
   
    stroke(0, 0, 0);//left eye outline
    fill(255, 255, 255);//left eye white
    ellipse(bitmojiX-(bitmojiHeight/150*10), bitmojiY-(bitmojiHeight/150*6), bitmojiHeight/150*20, bitmojiHeight/150*15);//left outer eye
    ellipse(bitmojiX+(bitmojiHeight/150*17), bitmojiY-(bitmojiHeight/150*5), bitmojiHeight/150*20, bitmojiHeight/150*15);//right outer white
   
    fill(97, 52, 52);
    ellipse(bitmojiX-(bitmojiHeight/150*10), bitmojiY-(bitmojiHeight/150*6), bitmojiHeight/150*6, bitmojiHeight/150*4);//left eye pupil
   
    ellipse(bitmojiX+(bitmojiHeight/150*17), bitmojiY-(bitmojiHeight/150*5), bitmojiHeight/150*6, bitmojiHeight/150*4);//right eye pupil
   
    stroke(10, 9, 10);
    fill(255, 205, 148);//fill to skin color
    bezier(bitmojiX, bitmojiY, bitmojiX+(bitmojiHeight/150*21), bitmojiY+(bitmojiHeight/150*22), bitmojiX-(bitmojiHeight/150*8), bitmojiY+(bitmojiHeight/150*20), bitmojiX-(bitmojiHeight/150*4), bitmojiY+(bitmojiHeight/150*15));//nose
   
fill(255, 255, 255);//teeth color
arc(bitmojiX+(bitmojiHeight/150*3), bitmojiY+(bitmojiHeight/150*25), bitmojiHeight/150*30, bitmojiHeight/150*13, bitmojiHeight/150*1, 180);//mouth
line(bitmojiX-(bitmojiHeight/150*14), bitmojiY+(bitmojiHeight/150*24), bitmojiX+(bitmojiHeight/150*19), bitmojiY+(bitmojiHeight/150*24));//top of mouth
   
fill(117, 130, 117);
arc(bitmojiX, bitmojiY-(bitmojiHeight/150*22), bitmojiHeight/150*85, bitmojiHeight/150*63, -180, bitmojiHeight/150*0);//hat
line(bitmojiX+(bitmojiHeight/150*42), bitmojiY-(bitmojiHeight/150*22), bitmojiX-(bitmojiHeight/150*43), bitmojiY-(bitmojiHeight/150*21));
};

var drawBitmojiBody2 = function (bitmojiX, bitmojiY, bitmojiHeight)
    {
   fill(0, 98, 255);//shirt color
quad(bitmojiX+(bitmojiHeight/150*48), bitmojiY+(bitmojiHeight/150*50), bitmojiX-(bitmojiHeight/150*47), bitmojiY+(bitmojiHeight/150*48), bitmojiX-(bitmojiHeight/150*46), bitmojiY+(bitmojiHeight/150*75), bitmojiX+(bitmojiHeight/150*48), bitmojiY+(bitmojiHeight/150*74));//shirt


};

var drawBitmoji2 = function (bitmojiX, bitmojiY, bitmojiHeight)
    {
    drawBitmojiHead2(bitmojiX, bitmojiY, bitmojiHeight);
    drawBitmojiBody2(bitmojiX, bitmojiY, bitmojiHeight);
};
////////////////////
//game grab method
////////////////////
 var BitmojiGrab = function() {
     if ((block1x >= bitmojiX - 40 && block1x <= (bitmojiX + 40)) &&
         (block1y >= bitmojiY - 40 && block1y <= (bitmojiY + 40))) {//checks if the blob touched the bitmoji
        bitmojiX = round(random(50,350));//assigns the new location for the new bitmoji 
        bitmojiY = round(random(50,350));
        score +=10;//adds score
        blobSpeed = blobSpeed + 1;//increases speed
        background(224, 172, 224);
         }
 };
////////////////////
//Khan button class
////////////////////
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 119;
    this.height = config.height || 50;
    this.label = config.label || "Click";
    this.onClick = config.onClick || function() {};
};

Button.prototype.draw = function() {
    fill(0, 234, 255);
    rect(this.x, this.y, this.width, this.height, 5);
    fill(0, 0, 0);
    textSize(19);
    textAlign(LEFT, TOP);
    text(this.label, this.x+10, this.y+this.height/4);
};

Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};
////////////////////
//our specific buttons
////////////////////
var startButton = new Button({//1st screen button
    x: 127,
    y: 309,
    label: "Instructions",
    onClick: function() {
        currentScene = 1;
    }
});

var gameButton = new Button({//2nd screen button
    x: 127,
    y: 309,
    label: "Start Game",
    onClick: function() {
        currentScene = 2;
    }
});
////////////////////
//different screens for our program
////////////////////
var splash = function ()
{
    background(79, 199, 66);
    fill(36, 30, 30);
    textSize(38);
    text("Snake Game", 82, 181, 300, 200);// \n is how you make a new line of text
    textSize(18);
    text("By: Nathan Sirois and Kyle Cabral", 56, 235, 300, 200);
    bitmoji1(226,100,59);
    drawBitmoji2(100,100,100);
    startButton.draw();
};

var directions = function ()
{
  background(79, 199, 66);
    fill(36, 30, 30);
    textSize(28);
    text("Directions:", 49, 42, 300, 200);
    textSize(18);
    text("The objective of the game is to grab the bitmoji that appears on the screen by directing the block using the arrow keys. The speed of the block will increase each time a bitmoji is grabbed. Touching the borders of the game screen will end the game.", 44,100,300,200);
    gameButton.draw();
};

mouseClicked = function() {
    if (currentScene === 0)
        {startButton.handleMouseClick();}
    else if (currentScene === 1)
        {gameButton.handleMouseClick();}
};

var game = function() {
    background(23, 181, 23);
    blob();
    drawBitmoji2(bitmojiX, bitmojiY);
    var newScore = score / 10;
    if (newScore % 2 === 0) {drawBitmoji1(bitmojiX, bitmojiY, 40);}
    else {drawBitmoji2(bitmojiX, bitmojiY, 60);}//switches between the two bitmojis
    BitmojiGrab();
    fill(26, 40, 163);
    textSize(30);
    text("Score: " + score, 19, 17);
     if (block1x < 0 || block1x > 380 || block1y < 0 || block1y > 380) {//collision check
     blobSpeed = 0;
     fill(105, 6, 36);
     text("Game Over", 121, 155);// add score when that is finished
     }
};
////////////////////
//draw function
////////////////////
draw = function() {
    if (currentScene === 0)
    {splash();}
    if (currentScene === 1)
    {directions();}
    if (currentScene === 2)
    {game();}
};
////////////////////
